name: CI/CD (Test & Lint)

on:
  # コードが main/master ブランチにプッシュされた時、
  # およびプルリクエストが作成された時に実行
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

# ジョブの定義
jobs:
  test_and_lint:
    # 実行環境はUbuntuの最新版
    runs-on: ubuntu-latest

    # 環境変数としてPythonバージョンを設定
    env:
      PYTHON_VERSION: "3.12"

    steps:
      # リポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # Python環境のセットアップ (指定バージョンを使用)
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          # 仮想環境をキャッシュして高速化
          cache: "poetry"

      # Poetryのインストール
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.x
          virtualenvs-create: true
          virtualenvs-in-project: true

      # 依存関係のインストール (devグループを含む)
      - name: Install dependencies
        run: poetry install --with dev --no-root

      # パッケージを編集可能モードでインストール
      - name: Install package root
        run: poetry install --only-root

      # --- 静的解析と品質チェック ---

      # コードフォーマットとスタイルのチェック (Ruff Linter)
      - name: Run Ruff Linter Check
        run: poetry run ruff check src tests

      # 型チェック (Mypy)
      - name: Run Mypy Type Check
        # Google APIの外部依存に対するignore設定を適用するため、厳密な実行が必須
        run: poetry run mypy src

      # ユニットテストの実行 (Pytest)
      - name: Run Pytest
        run: poetry run pytest
